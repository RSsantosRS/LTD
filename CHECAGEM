from flask import Flask, render_template, request, redirect, url_for, flash, session
import sqlite3
import bcrypt

app = Flask(__name__)
app.secret_key = 'rafaelds'  # chave secreta de teste

# Nome do banco de dados SQLite
DATABASE = 'ltd.db'

# Função para obter a conexão com o banco de dados
def get_db_connection():
    conn = sqlite3.connect(DATABASE)
    return conn

# Função para inicializar o banco de dados
def init_db():
    conn = get_db_connection()
    cursor = conn.cursor()
    # Criar tabela usuarios com colunas login e senha
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS usuarios (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        login TEXT UNIQUE NOT NULL,
        senha TEXT NOT NULL
    )
    ''')
    conn.commit()
    conn.close()

# Função para criar um novo usuário com hash na senha
def criar_usuario(login, senha):
    hashed_password = bcrypt.hashpw(senha.encode('utf-8'), bcrypt.gensalt())  # Criptografa a senha
    conn = get_db_connection()
    cursor = conn.cursor()
    try:
        # Insere novo usuário na tabela
        cursor.execute("INSERT INTO usuarios (login, senha) VALUES (?, ?)", (login, hashed_password))
        conn.commit()
    except sqlite3.IntegrityError:
        return False  # Retorna False se o usuário já existir
    finally:
        conn.close()
    return True

# Função para verificar as credenciais do usuário
def verificar_credenciais(login, senha):
    conn = get_db_connection()
    cursor = conn.cursor()
    cursor.execute("SELECT senha FROM usuarios WHERE login=?", (login,))
    result = cursor.fetchone()
    conn.close()
    if result and bcrypt.checkpw(senha.encode('utf-8'), result[0]):
        return True
    return False

# Rota de login
@app.route('/', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        login = request.form['login']
        senha = request.form['senha']

        if verificar_credenciais(login, senha):
            session['login'] = login
            return redirect(url_for('home'))
        else:
            flash('Login ou senha incorretos!')

    return render_template('index.html')

# Rota da página inicial
@app.route('/home')
def home():
    if 'login' in session:
        return f'Bem-vindo, {session["login"]}!'
    return redirect(url_for('login'))

# Rota de logout
@app.route('/logout')
def logout():
    session.pop('login', None)
    return redirect(url_for('login'))

# Inicializa o banco de dados e cria um usuário padrão para teste
if __name__ == '__main__':
    init_db()
    criar_usuario('Rafael', '123')  # Adiciona um usuário de teste
    app.run(debug=True)
